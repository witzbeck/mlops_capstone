name: Test App

on:
  pull_request:
    branches: [main, next/*]
  push:
    branches: [main, next/*]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        dir: ["app", "frontend"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Add Poetry to PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Load Cached Poetry Dependencies
        uses: actions/cache@v4
        id: cache-poetry
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.dir }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.dir }}-poetry-
            ${{ runner.os }}-poetry-

      - name: Install Test Dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          cd ${{ matrix.dir }}
          poetry install --with test --no-interaction

      - name: Run tests
        run: |
          cd ${{ matrix.dir }}
          poetry run pytest --cov={{ matrix.dir }} --cov-report=xml -n auto
