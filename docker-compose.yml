version: '3.8'

services:
  mlflow_database:
    image: postgres:latest
    container_name: mlflow_db
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow_db
    volumes:
      - ./mlflow_db/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./mlflow_db/init_scripts:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5435:5432"
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5435/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    command: ["mlflow", "server",
            "--backend-store-uri", "/mlflow",
            "--default-artifact-root", "/mlflow/artifacts",
            "--host", "0.0.0.0",
            "--port", "5000"]
    env_file:
      - .env
    container_name: mlflow_server
    depends_on:
      - mlflow_database
    ports:
      - "5000:5000"
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app_database:
    image: postgres:latest
    container_name: app_db
    env_file:
      - .env
    volumes:
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./database/init_scripts:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5436:5432"
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5436/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: app_engine
    volumes:
      - ./app:/app
      - ./frontend:/frontend
      - ./store:/store
    env_file:
      - .env
    ports:
      - "80:80"
    depends_on:
      - mlflow
      - app_database
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend_server
    env_file:
      - .env
    command: ["streamlit", "run", "Home.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
    volumes:
      - ./frontend:/frontend
    ports:
      - "8501:8501"
    depends_on:
      - app
      - mlflow
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  bridge:
    driver: bridge
