version: '3.8'

services:
  app:
    build:
      context: app
      dockerfile: Dockerfile
      args:
        - FASTAPI_PORT
    volumes:
      - ./app:/app
      - ./frontend:/frontend
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      - mlflow
    networks:
      - mlflow_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  database:
    image: postgres:16.2
    environment:
      - ENVIROMENT=$ENVIRONMENT
      # - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_INITDB_ARGS=--data-checksums
    container_name: database
    restart: always
    volumes:
      - ./database/postgres-$ENVIRONMENT.conf:/etc/postgresql/postgresql.conf
      - ./database/init_scripts:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5432:5432"
    networks:
      - db_network
      - mlflow_network

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    command: ["streamlit", "run", "Home.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
    volumes:
      - ./frontend:/frontend
    ports:
      - "8501:8501"
    env_file:
      - .env
    depends_on:
      - app
      - mlflow
    networks:
      - mlflow_network
      - db_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  mlflow:
    build:
      context: mlflow
      dockerfile: Dockerfile
    command: mlflow server --backend-store-uri $MLFLOW_STORE_URI --default-artifact-root $MLFLOW_ARTIFACT_URI --host $POSTGRES_HOST --port $POSTGRES_PORT
    environment:
      - MLFLOW_DB_USER=$MLFLOW_DB_USER
      - MLFLOW_DB_PASSWORD=$MLFLOW_DB_PASSWORD
      - MLFLOW_DB_NAME=$MLFLOW_DB_NAME
      - MLFLOW_STORE_URI=$MLFLOW_STORE_URI
      - MLFLOW_ARTIFACT_URI=$MLFLOW_ARTIFACT_URI
      - MLFLOW_EXPERIMENT_NAME=$MLFLOW_EXPERIMENT_NAME
      - MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
    
    ports:
      - "5000:5000"
    networks:
      - mlflow_network
      - db_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  mlflow_network:
    driver: bridge
  db_network:
    driver: bridge
