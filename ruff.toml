exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
]
extend-include = ["*.ipynb"]
line-length = 88
indent-width = 4
target-version = "py312"

[lint]
fixable = ["ALL"]
unfixable = ["B"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = [
    "B",       # bugbear
    "D",       # pydocstyle
    "E",       # pycodestyle
    "F",       # pyflakes
    "I",       # isort
    "PGH004",  # pygrep-hooks - Use specific rule codes when using noqa
    "PIE",     # flake8-pie
    "PLE",     # pylint error
    "PLR1714", # Consider merging multiple comparisons
    "PLW",     # pylint warning
    "PYI",     # flake8-pyi
    "RUF",     # ruff
    "T100",    # flake8-debugger
    "UP",      # pyupgrade
    "W",       # pycodestyle
]
ignore = [
    # bugbear ignore
    "B004", # Using `hasattr(x, "__call__")` to test if x is callable is unreliable.
    "B007", # Loop control variable `i` not used within loop body
    "B009", # Do not call `getattr` with a constant attribute value
    "B010", # [*] Do not call `setattr` with a constant attribute value.
    "B011", # Do not `assert False` (`python -O` removes these calls)
    "B028", # No explicit `stacklevel` keyword argument found
    # pydocstyle ignore
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`
    "D205", # 1 blank line required between summary line and description
    "D209", # [*] Multi-line docstring closing quotes should be on a separate line
    "D400", # First line should end with a period
    "D401", # First line of docstring should be in imperative mood
    "D402", # First line should not be the function's signature
    "D404", # First word of the docstring should not be "This"
    "D415", # First line should end with a period, question mark, or exclamation point
    # ruff ignore
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

[lint.isort]
known-first-party = ["app", "frontend", "mlops_capstone"]
known-local-folder = [
    "app",
    "frontend",
    "database",
    "mlops_capstone",
    "tests",
    "store",
]

# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[lint.flake8-quotes]
docstring-quotes = "double"
